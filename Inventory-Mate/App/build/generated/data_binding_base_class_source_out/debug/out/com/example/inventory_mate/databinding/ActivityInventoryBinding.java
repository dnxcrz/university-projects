// Generated by view binder compiler. Do not edit!
package com.example.inventory_mate.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageButton;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.inventory_mate.R;
import com.google.android.material.bottomnavigation.BottomNavigationView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityInventoryBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageButton addInventoryButton;

  @NonNull
  public final BottomNavigationView bottomNavigation;

  @NonNull
  public final RecyclerView inventoryRecyclerview;

  @NonNull
  public final ImageButton scanButton;

  @NonNull
  public final EditText searchBar;

  private ActivityInventoryBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageButton addInventoryButton, @NonNull BottomNavigationView bottomNavigation,
      @NonNull RecyclerView inventoryRecyclerview, @NonNull ImageButton scanButton,
      @NonNull EditText searchBar) {
    this.rootView = rootView;
    this.addInventoryButton = addInventoryButton;
    this.bottomNavigation = bottomNavigation;
    this.inventoryRecyclerview = inventoryRecyclerview;
    this.scanButton = scanButton;
    this.searchBar = searchBar;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityInventoryBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityInventoryBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_inventory, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityInventoryBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.add_inventory_button;
      ImageButton addInventoryButton = ViewBindings.findChildViewById(rootView, id);
      if (addInventoryButton == null) {
        break missingId;
      }

      id = R.id.bottom_navigation;
      BottomNavigationView bottomNavigation = ViewBindings.findChildViewById(rootView, id);
      if (bottomNavigation == null) {
        break missingId;
      }

      id = R.id.inventory_recyclerview;
      RecyclerView inventoryRecyclerview = ViewBindings.findChildViewById(rootView, id);
      if (inventoryRecyclerview == null) {
        break missingId;
      }

      id = R.id.scan_button;
      ImageButton scanButton = ViewBindings.findChildViewById(rootView, id);
      if (scanButton == null) {
        break missingId;
      }

      id = R.id.search_bar;
      EditText searchBar = ViewBindings.findChildViewById(rootView, id);
      if (searchBar == null) {
        break missingId;
      }

      return new ActivityInventoryBinding((ConstraintLayout) rootView, addInventoryButton,
          bottomNavigation, inventoryRecyclerview, scanButton, searchBar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
